name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.7-dind
        privileged: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Build Docker image
        run: docker build -t yt-chat:ci .

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Start container for tests
        run: docker run -d -p 8080:8080 --env-file .env yt-chat:ci

      - name: Wait for healthcheck
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8080/health | grep 'ok'; then
              exit 0
            fi
            sleep 3
          done
          exit 1

      - name: Run backend tests
        run: cd backend && npm install && npm test

      - name: Run frontend tests
        run: cd frontend && npm install && npm test -- --watchAll=false

      - name: Run integration tests
        run: npm run test:integration

      - name: Run security simulation tests
        run: cd backend && npm run test -- security.test.js

      - name: Run frontend XSS simulation tests
        run: cd frontend && npm run test -- src/__tests__/XSS.test.js --watchAll=false

      - name: Audit dependencies for vulnerabilities
        run: npm audit --audit-level=high

      - name: Check threat documentation
        run: ./scripts/check-threat-docs.sh

      - name: Stop container
        run: docker stop $(docker ps -q --filter ancestor=yt-chat:ci) || true